on:
  workflow_call:
    inputs:
      goreleaser-release-args:
        description: 'goreleaser release Arguments (e.g. --skip-validate)'
        required: false
        type: string
      release-notes:
        description: 'Enable release notes handling (must have previously uploaded artifact named "release-notes" with file "release-notes.txt")'
        required: false
        type: boolean
      setup-go-version:
        description: 'setup-go Go Version'
        required: false
        type: string
      setup-go-version-file:
        description: 'setup-go File From Which To Read Go Version'
        required: false
        type: string
      git-ref:
        description: 'branch, tag or SHA to checkout'
        required: false
        type: string
    secrets:
      gpg-private-key:
        description: 'GPG Private Key'
        required: true
      gpg-private-key-passphrase:
        description: 'GPG Private Key Passphrase'
        required: false

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version: ${{ inputs.setup-go-version }}
          go-version-file: ${{ inputs.setup-go-version-file }}
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        with:
          gpg_private_key: ${{ secrets.gpg-private-key }}
          passphrase: ${{ secrets.gpg-private-key-passphrase }}
      - if: inputs.release-notes != true
        name: goreleaser release (without release notes)
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          args: release --clean ${{ inputs.goreleaser-release-args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      - if: inputs.release-notes
        id: release-notes-download
        name: Release Notes Download
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: release-notes
          path: /tmp
      - if: inputs.release-notes
        name: goreleaser release (with release notes)
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          args: release --release-notes ${{ steps.release-notes-download.outputs.download-path }}/release-notes.txt --clean ${{ inputs.goreleaser-release-args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
