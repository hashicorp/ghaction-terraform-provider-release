on:
  workflow_call:
    inputs:
      goreleaser-release-args:
        description: 'goreleaser release Arguments (e.g. --skip-validate)'
        required: false
        type: string
      gpg-public-key-id:
        description: 'GPG Public Key Identifier for Signature Filename'
        default: '72D7468F'
        required: false
        type: string
      release-notes:
        description: 'Enable release notes handling (must have previously uploaded artifact named "release-notes" with file "release-notes.txt")'
        required: false
        type: boolean
      setup-go-version:
        description: 'setup-go Go Version'
        required: true
        type: string
      signore-signer:
        description: 'signore Signer'
        default: 'interim_signing_subkey_7685B676'
        required: false
        type: string
    secrets:
      hc-releases-aws-access-key-id:
        description: 'AWS IAM Access Key Identifier for hc-releases (TF_PROVIDER_RELEASE_AWS_ACCESS_KEY_ID)'
        required: true
      hc-releases-aws-secret-access-key:
        description: 'AWS IAM Access Key Secret for hc-releases (TF_PROVIDER_RELEASE_AWS_SECRET_ACCESS_KEY)'
        required: true
      hc-releases-aws-role-arn:
        description: 'AWS IAM Role to Assume for hc-releases (TF_PROVIDER_RELEASE_AWS_ROLE_ARN)'
        required: true
      hc-releases-fastly-api-token:
        description: 'Fastly API Token for hc-releases (FASTLY_STATIC_PURGE_TOKEN)'
        required: true
      hc-releases-github-token:
        description: 'GitHub Personal Access Token to Access hc-releases (HC_RELEASES_TOKEN)'
        required: true
      hc-releases-terraform-registry-sync-token:
        description: 'Terraform Registry Sync Token for hc-releases (TF_PROVIDER_RELEASE_TERRAFORM_REGISTRY_SYNC_TOKEN)'
        required: true
      setup-signore-github-token:
        description: 'GitHub Personal Access Token to Access setup-signore (SETUP_SIGNORE_GITHUB_TOKEN)'
        required: true
      # See also: TF-279 Repository Owned HashiCorp Provider Releases
      signore-client-id:
        description: 'signore Client Identifier (SIGNORE_CLIENT_ID)'
        required: true
      signore-client-secret:
        description: 'signore Client Secret (SIGNORE_CLIENT_SECRET)'
        required: true

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Allow tag to be fetched when ref is a commit
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.setup-go-version }}
      # See also: ENGSRV-063: setup-hc-releases GitHub Action
      - uses: hashicorp/setup-hc-releases@v1
        with:
          github-token: ${{ secrets.hc-releases-github-token }}
      # See also: ENGSRV-065: setup-signore GitHub Action
      - uses: hashicorp/setup-signore@v2
        with:
          github-token: ${{ secrets.setup-signore-github-token }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.hc-releases-aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.hc-releases-aws-secret-access-key }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.hc-releases-aws-role-arn }}
          role-duration-seconds: 3600
          # TODO: allow session tagging once IAM permission changes addressed
          # Reference: https://github.com/hashicorp/hc-releases/issues/124
          role-skip-session-tagging: true
      - if: inputs.release-notes != true
        name: goreleaser release (without release notes)
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist ${{ inputs.goreleaser-release-args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PUBLIC_KEY_ID: ${{ inputs.gpg-public-key-id }}
          SIGNORE_CLIENT_ID: ${{ secrets.signore-client-id }}
          SIGNORE_CLIENT_SECRET: ${{ secrets.signore-client-secret }}
          SIGNORE_SIGNER: ${{ inputs.signore-signer }}
      - if: inputs.release-notes
        id: release-notes-download
        name: Release Notes Download
        uses: actions/download-artifact@v2
        with:
          name: release-notes
          path: /tmp
      - if: inputs.release-notes
        name: goreleaser release (with release notes)
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --release-notes ${{ steps.release-notes-download.outputs.download-path }}/release-notes.txt --rm-dist ${{ inputs.goreleaser-release-args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PUBLIC_KEY_ID: ${{ inputs.gpg-public-key-id }}
          SIGNORE_CLIENT_ID: ${{ secrets.signore-client-id }}
          SIGNORE_CLIENT_SECRET: ${{ secrets.signore-client-secret }}
          SIGNORE_SIGNER: ${{ inputs.signore-signer }}
      - name: hc-releases publish
        run: hc-releases publish -product=${{ github.event.repository.name }}
        env:
          FASTLY_API_TOKEN: ${{ secrets.hc-releases-fastly-api-token }}
          TERRAFORM_REGISTRY_SYNC_TOKEN: ${{ secrets.hc-releases-terraform-registry-sync-token }}

